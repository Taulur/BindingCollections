<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style TargetType="Button">
        <Setter Property="Width" Value="175"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Margin" Value="5"/>
        
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonHover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="StackPanel">
        <Setter Property="Background" Value="{DynamicResource StackBackground}"/>
    </Style>

    <Style TargetType="StackPanel" x:Key="StackBack" BasedOn="{StaticResource {x:Type StackPanel}}">

        
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="Height" Value="450"></Setter>
        <Setter Property="Width" Value="750"></Setter>
    </Style>

    <Style TargetType="Frame">
        <Setter Property="Height" Value="450"></Setter>
        <Setter Property="Width" Value="750"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
    </Style>


    <Style TargetType="Grid" x:Key="GridBack">
        <Setter Property="Background" Value="{DynamicResource GridBackground}"></Setter>
        <Setter Property="Margin" Value="10"></Setter>
    </Style>

    <Style TargetType="Page">
        
        <Setter Property="Height" Value="430"></Setter>
        <Setter Property="Width" Value="800"></Setter>
    </Style>

    <Style TargetType="ListView">
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"></Setter>
        <Setter Property="Height" Value="100"></Setter>
        <Setter Property="Width" Value="350"></Setter>
    </Style>

    <Style TargetType="Menu">
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"></Setter>
        <Setter Property="Height" Value="20"></Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Width" Value="175"/>
       
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style TargetType="TextBox" x:Key="WideBox">
        <Setter Property="Width" Value="225"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="DatePicker">
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="25"/>
    </Style>

    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource TextColor }"></Setter>
        
    </Style>

    <Style TargetType="Label"
       x:Key="MenuLabel"
       BasedOn="{StaticResource {x:Type Label}}">

        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
    </Style>



    <Style TargetType="Button"
       x:Key="AddButton"
           
       BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <StackPanel  Orientation="Horizontal">
                        <Border  x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                            <StackPanel Width="150" Background="{DynamicResource ButtonBackground}" Orientation="Horizontal" >
                                <TextBlock x:Name="contentText" 
                                       Text="{TemplateBinding Content}"
                                          
                                       VerticalAlignment="Center"/>
                                <TextBlock Text="+" 
                                       VerticalAlignment="Center"
                                        
                                       Margin="2,0,0,0"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonPressed}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonHover}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" 
           x:Key="ChangeButton" 
           BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Content" Value="🗑️"></Setter>
        <Setter Property="FontWeight" Value="ExtraBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonPressed}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonHover}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" 
        x:Key="BackButton" 
        BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Content" Value="🗑️"></Setter>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
         Background="{TemplateBinding Background}"
         BorderBrush="{TemplateBinding BorderBrush}"
         BorderThickness="{TemplateBinding BorderThickness}"
         Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="DarkRed"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>